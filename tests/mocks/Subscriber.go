// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	events "tasquest.com/server/infra/events"
)

// Subscriber is an autogenerated mock type for the Subscriber type
type Subscriber struct {
	mock.Mock
}

// Subscribe provides a mock function with given fields: topic, exec
func (_m *Subscriber) Subscribe(topic string, exec interface{}) (events.Subscription, error) {
	ret := _m.Called(topic, exec)

	var r0 events.Subscription
	if rf, ok := ret.Get(0).(func(string, interface{}) events.Subscription); ok {
		r0 = rf(topic, exec)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(events.Subscription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, interface{}) error); ok {
		r1 = rf(topic, exec)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
