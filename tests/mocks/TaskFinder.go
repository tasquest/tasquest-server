// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	commons "tasquest.com/server/commons"

	tasks "tasquest.com/server/application/gamification/tasks"

	uuid "github.com/google/uuid"
)

// TaskFinder is an autogenerated mock type for the TaskFinder type
type TaskFinder struct {
	mock.Mock
}

// FindByFilter provides a mock function with given fields: filter
func (_m *TaskFinder) FindByFilter(filter commons.Map) (tasks.Task, error) {
	ret := _m.Called(filter)

	var r0 tasks.Task
	if rf, ok := ret.Get(0).(func(commons.Map) tasks.Task); ok {
		r0 = rf(filter)
	} else {
		r0 = ret.Get(0).(tasks.Task)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(commons.Map) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindByID provides a mock function with given fields: id
func (_m *TaskFinder) FindByID(id uuid.UUID) (tasks.Task, error) {
	ret := _m.Called(id)

	var r0 tasks.Task
	if rf, ok := ret.Get(0).(func(uuid.UUID) tasks.Task); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(tasks.Task)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
