// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	security "tasquest.com/server/application/security"

	uuid "github.com/google/uuid"
)

// UserService is an autogenerated mock type for the UserService type
type UserService struct {
	mock.Mock
}

// FetchUser provides a mock function with given fields: id
func (_m *UserService) FetchUser(id uuid.UUID) (security.User, error) {
	ret := _m.Called(id)

	var r0 security.User
	if rf, ok := ret.Get(0).(func(uuid.UUID) security.User); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(security.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterUser provides a mock function with given fields: command
func (_m *UserService) RegisterUser(command security.RegisterUserCommand) (security.User, error) {
	ret := _m.Called(command)

	var r0 security.User
	if rf, ok := ret.Get(0).(func(security.RegisterUserCommand) security.User); ok {
		r0 = rf(command)
	} else {
		r0 = ret.Get(0).(security.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(security.RegisterUserCommand) error); ok {
		r1 = rf(command)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
