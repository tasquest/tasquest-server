// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	security "tasquest.com/server/security"
)

// UserManagement is an autogenerated mock type for the UserManagement type
type UserManagement struct {
	mock.Mock
}

// FetchUser provides a mock function with given fields: id
func (_m *UserManagement) FetchUser(id string) (security.User, error) {
	ret := _m.Called(id)

	var r0 security.User
	if rf, ok := ret.Get(0).(func(string) security.User); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(security.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterUser provides a mock function with given fields: command
func (_m *UserManagement) RegisterUser(command security.RegisterUserCommand) (security.User, error) {
	ret := _m.Called(command)

	var r0 security.User
	if rf, ok := ret.Get(0).(func(security.RegisterUserCommand) security.User); ok {
		r0 = rf(command)
	} else {
		r0 = ret.Get(0).(security.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(security.RegisterUserCommand) error); ok {
		r1 = rf(command)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
